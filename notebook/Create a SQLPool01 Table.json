{
	"name": "Create a SQLPool01 Table",
	"properties": {
		"description": "https://github.com/solliancenet/azure-synapse-analytics-day/blob/master/02-build-modern-dw-pipelines.md",
		"folder": {
			"name": "02-build-modern-dw-pipelines"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "52d4a163-8d96-4699-b6c3-e1177c135603"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/fbfcdd32-da9a-480c-b5c3-1b5d0c6d797c/resourceGroups/Azure-Synapse-Analytics-Day/providers/Microsoft.Synapse/workspaces/synapseday-ws/bigDataPools/SparkPool01",
				"name": "SparkPool01",
				"type": "Spark",
				"endpoint": "https://synapseday-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"\r\n",
					"// Set the path to read the WWI Sales files\r\n",
					"import org.apache.spark.sql.SparkSession\r\n",
					"\r\n",
					"// Set the path to the ADLS Gen2 account\r\n",
					"val adlsPath = \"abfss://wwi@synapsedaydatalake.dfs.core.windows.net\""
				],
				"attachments": null,
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"\r\n",
					"// Read the sales into a dataframe\r\n",
					"val sales = spark.read.format(\"csv\").option(\"header\", \"true\").option(\"inferSchema\", \"true\").option(\"sep\", \"|\").load(s\"$adlsPath/factsale-csv/2012/Q4\")\r\n",
					"sales.show(5)\r\n",
					"sales.printSchema()"
				],
				"attachments": null,
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "scala"
					}
				},
				"source": [
					"%%spark\r\n",
					"\r\n",
					"// Import libraries for the SQL Analytics connector\r\n",
					"import com.microsoft.spark.sqlanalytics.utils.Constants\r\n",
					"import org.apache.spark.sql.SqlAnalyticsConnector._\r\n",
					"import org.apache.spark.sql.SaveMode\r\n",
					"\r\n",
					"// Set target table name\r\n",
					"var tableName = s\"SQLPool01.wwi_staging.Sale\"\r\n",
					"\r\n",
					"// Write the retrieved sales data into a staging table in Azure Synapse Analytics.\r\n",
					"sales.limit(10000).write.mode(SaveMode.Append).sqlanalytics(tableName, Constants.INTERNAL)"
				],
				"attachments": null,
				"execution_count": 7
			}
		]
	}
}
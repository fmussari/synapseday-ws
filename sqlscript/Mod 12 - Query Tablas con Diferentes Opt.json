{
	"name": "Mod 12 - Query Tablas con Diferentes Opt",
	"properties": {
		"description": "https://docs.microsoft.com/en-us/learn/modules/optimize-data-warehouse-query-performance-azure-synapse-analytics/3-exercise-understand-performance-issues-related-to-tables",
		"folder": {
			"name": "ASA 30 days Challenge"
		},
		"content": {
			"query": "\n\n\n-- Exercise - Use table distribution and indexes to improve performance\n-- https://docs.microsoft.com/en-us/learn/modules/optimize-data-warehouse-query-performance-azure-synapse-analytics/6-exercise-use-table-distribution-indexes-to-improve-performance\n\n\n\n-- Query Performance\n/*\n[wwi_perf].[Sale_NoNothing]   -> Sin optimización: ROUND_ROBIN and HEAP\n[wwi_perf].[Sale_Hash_Clustrd]    -> Hash on CustomerKey / CLUSTERED COLUMNSTORE INDEX\n*/\n\n------------------------------------------------\n-- Test Query 1: [wwi_perf].[Sale_NoNothing]\n------------------------------------------------\n\nSELECT\n    FS.CustomerKey\n    ,MIN(FS.Quantity) as MinQuantity\n    ,MAX(FS.Quantity) as MaxQuantity\n    ,AVG(FS.TaxRate) as AvgTaxRate\n    ,AVG(FS.TaxAmount) as AvgTaxAmount\n    ,AVG(FS.TotalExcludingTax) as AverageSaleWithoutTax\n    ,AVG(FS.TotalIncludingTax) as AverageSaleWithTax\n    ,COUNT(DISTINCT FS.StockItemKey) as DistinctStockItems\n    ,COUNT(DISTINCT DC.Country) as DistinctCountries\nFROM\n    wwi_perf.Sale_NoNothing FS\n    join wwi.DimCity DC ON\n        DC.CityKey = FS.CityKey\nGROUP BY\n    FS.CustomerKey\n\n-- Resultado:\n-- 1: Total execution time: 00:00:25.434\n-- 2: Total execution time: 00:00:12.390\n-- 3: Total execution time: 00:00:12.641\n-- 4: Total execution time: 00:00:10.972\n\n------------------------------------------------\n-- Test Query 2: [wwi_perf].[Sale_Hash_Clustrd]\n------------------------------------------------\nSELECT\n    FS.CustomerKey\n    ,MIN(FS.Quantity) as MinQuantity\n    ,MAX(FS.Quantity) as MaxQuantity\n    ,AVG(FS.TaxRate) as AvgTaxRate\n    ,AVG(FS.TaxAmount) as AvgTaxAmount\n    ,AVG(FS.TotalExcludingTax) as AverageSaleWithoutTax\n    ,AVG(FS.TotalIncludingTax) as AverageSaleWithTax\n    ,COUNT(DISTINCT FS.StockItemKey) as DistinctStockItems\n    ,COUNT(DISTINCT DC.Country) as DistinctCountries\nFROM\n    wwi_perf.Sale_Hash_Clustrd FS\n    join wwi.DimCity DC ON\n        DC.CityKey = FS.CityKey\nGROUP BY\n    FS.CustomerKey\n\n-- Resultado:\n-- 1: Total execution time: 00:00:35.029\n-- 2: Total execution time: 00:00:28.108\n-- 3: Total execution time: 00:00:33.627\n-- 4: Total execution time: 00:00:33.785\n\n------------------------------------------------\n-- Test Query 3: [wwi_perf].[Sale_Hash_Heap]\n------------------------------------------------\nSELECT\n    FS.CustomerKey\n    ,MIN(FS.Quantity) as MinQuantity\n    ,MAX(FS.Quantity) as MaxQuantity\n    ,AVG(FS.TaxRate) as AvgTaxRate\n    ,AVG(FS.TaxAmount) as AvgTaxAmount\n    ,AVG(FS.TotalExcludingTax) as AverageSaleWithoutTax\n    ,AVG(FS.TotalIncludingTax) as AverageSaleWithTax\n    ,COUNT(DISTINCT FS.StockItemKey) as DistinctStockItems\n    ,COUNT(DISTINCT DC.Country) as DistinctCountries\nFROM\n    wwi_perf.Sale_Hash_Heap FS\n    join wwi.DimCity DC ON\n        DC.CityKey = FS.CityKey\nGROUP BY\n    FS.CustomerKey\n\n-- Resultado:\n-- 1: Total execution time: 00:00:45.951\n-- 2: Total execution time: 00:00:44.657\n-- 3: Total execution time: 00:00:45.284\n-- 4: Total execution time: 00:00:43.741\n\n------------------------------------------------\n-- Test Query 4: [wwi_perf].[Sale_NoHash_Clustrd]\n------------------------------------------------\nSELECT\n    FS.CustomerKey\n    ,MIN(FS.Quantity) as MinQuantity\n    ,MAX(FS.Quantity) as MaxQuantity\n    ,AVG(FS.TaxRate) as AvgTaxRate\n    ,AVG(FS.TaxAmount) as AvgTaxAmount\n    ,AVG(FS.TotalExcludingTax) as AverageSaleWithoutTax\n    ,AVG(FS.TotalIncludingTax) as AverageSaleWithTax\n    ,COUNT(DISTINCT FS.StockItemKey) as DistinctStockItems\n    ,COUNT(DISTINCT DC.Country) as DistinctCountries\nFROM\n    wwi_perf.Sale_NoHash_Clustrd FS\n    join wwi.DimCity DC ON\n        DC.CityKey = FS.CityKey\nGROUP BY\n    FS.CustomerKey\n\n-- Resultado:\n-- 1: Total execution time: 00:00:16.483\n-- 2: Total execution time: 00:00:07.901\n-- 3: Total execution time: 00:00:06.700\n-- 4: Total execution time: 00:00:09.914\n\n------------------------------------------------\n-- Test Query 5: [wwi_perf].[Sale_Dupli_Clustrd]\n------------------------------------------------\nSELECT\n    FS.CustomerKey\n    ,MIN(FS.Quantity) as MinQuantity\n    ,MAX(FS.Quantity) as MaxQuantity\n    ,AVG(FS.TaxRate) as AvgTaxRate\n    ,AVG(FS.TaxAmount) as AvgTaxAmount\n    ,AVG(FS.TotalExcludingTax) as AverageSaleWithoutTax\n    ,AVG(FS.TotalIncludingTax) as AverageSaleWithTax\n    ,COUNT(DISTINCT FS.StockItemKey) as DistinctStockItems\n    ,COUNT(DISTINCT DC.Country) as DistinctCountries\nFROM\n    wwi_perf.Sale_Dupli_Clustrd FS\n    join wwi.DimCity DC ON\n        DC.CityKey = FS.CityKey\nGROUP BY\n    FS.CustomerKey\n\n-- Resultado:\n-- 1: Total execution time: 00:00:17.272\n-- 2: Total execution time: 00:00:12.421\n-- 3: Total execution time: 00:00:10.916\n-- 4: Total execution time: 00:01:03.575\n-- 5: Total execution time: 00:01:03.575\n\n-- Nojo, no entiendo, de repente esta tabla REPLICATE empezó a tardar 1 minuto\n-- Ahora no sé si estaba ejecutando el query donde era. Estoy casi seguro que sí, pero bue...\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "SQLPool01",
				"poolName": "SQLPool01"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}